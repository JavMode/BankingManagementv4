openapi: 3.0.0
info:
  title: Yanki Microservice
  description: API to manage yanki.
  version: 1.0.0

servers:
  - url: http://localhost:8095

paths:

  /yankis:
    get:
      tags:
        - yanki
      summary: Get all yanki accounts
      operationId: getYankis
      responses:
        200:
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/YankiResponse'
    post:
      tags:
        - yanki
      summary: Create a new yanki account
      operationId: createYanki
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YankiRequest'
      responses:
        201:
          description: Card created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YankiResponse'
        400:
          description: Invalid input
  /yankis/payment:
    post:
      tags:
        - yanki
      summary: Pay amount with yanki
      operationId: payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YankiOperationRequest'
      responses:
        201:
          description: Card created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YankiOperationResponse'
        400:
          description: Invalid input
  /yankis/withdraw:
    post:
      tags:
        - yanki
      summary: Withdraw amount with yanki
      operationId: withdraw
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YankiOperationRequest'
      responses:
        201:
          description: Card created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YankiOperationResponse'
        400:
          description: Invalid input
  /yankis/{identifierValue}:
    delete:
      tags:
        - yanki
      summary: Delete a yanki account by identifier
      operationId: deleteYankiByIdentifier
      parameters:
        - in: path
          name: identifierValue
          required: true
          schema:
            type: string
      responses:
        204:
          description: No content
        400:
          description: Invalid body supplied
        404:
          description: Client not found

components:
  schemas:
    YankiRequest:
      type: object
      properties:
        identifier:
          type: string
          enum: [DNI, CEX, PASSPORT]
        identifierValue:
          type: string
          example: 123456789
        phone:
          type: integer
          example: 957239780
        imei:
          type: string
          example: 123457238325
        email:
          type: string
          example: juan.sanchez@gmail.com
        card:
          type: string
          example: 1234567812345678
    YankiResponse:
      type: object
      properties:
        identifier:
          type: string
          enum: [DNI, CEX, PASSPORT]
        identifierValue:
          type: string
          example: 123456789
        phone:
          type: integer
          example: 957239780
        imei:
          type: string
          example: 123457238325
        email:
          type: string
          example: juan.sanchez@gmail.com
    YankiOperationRequest:
      type: object
      properties:
        amount:
          type: number
          format: double
          example: 23.5
        senderPhone:
          type: integer
          example: 987654321
        receiverPhone:
          type: integer
          example: 987654322
    YankiOperationResponse:
      type: object
      properties:
        description:
          type: string
          example: "La operacion se realizo adecuadamente"

tags:
  - name: yanki
    description: Operations about yanki